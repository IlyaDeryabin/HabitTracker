plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path: ':domain')

    /* Android Core */
    implementation 'androidx.core:core-ktx:1.7.0'

    /* Dagger 2 */
    def dagger_version = "2.41"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    /* Room */
    def room_version = "2.4.2"
    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    /* Retrofit */
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    /* GSON */
    implementation "com.google.code.gson:gson:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    /* Work Manager */
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    /* Coroutines */
    def coroutines_version = '1.6.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    /* Junit */
    testImplementation 'junit:junit:4.13.2'
}